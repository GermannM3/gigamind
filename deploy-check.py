#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ timeweb.cloud
"""
import os
import sys
import requests
from pathlib import Path

def check_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    required_files = [
        'main.py',
        'api.py', 
        'memory.py',
        'judge.py',
        'requirements.txt',
        'Dockerfile',
        'docker-compose.yml',
        'timeweb-app.yaml'
    ]
    
    missing_files = []
    for file in required_files:
        if not Path(file).exists():
            missing_files.append(file)
    
    if missing_files:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {', '.join(missing_files)}")
        return False
    else:
        print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        return True

def check_env():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    from dotenv import load_dotenv
    load_dotenv()
    
    gigachat_token = os.getenv("GIGACHAT_ACCESS_TOKEN")
    gigachat_auth = os.getenv("GIGACHAT_AUTH_KEY")
    
    if not gigachat_token and not gigachat_auth:
        print("‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è GigaChat API")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ GIGACHAT_ACCESS_TOKEN –∏–ª–∏ GIGACHAT_AUTH_KEY")
        return False
    else:
        print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è GigaChat –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        return True

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    try:
        import fastapi
        import uvicorn
        import sentence_transformers
        import faiss
        print("‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return True
    except ImportError as e:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {e}")
        return False

def test_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API –ª–æ–∫–∞–ª—å–Ω–æ"""
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        from api import app
        print("‚úÖ API –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ API: {e}")
        return False

def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ timeweb.cloud\n")
    
    checks = [
        ("–§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞", check_files),
        ("–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è", check_env), 
        ("–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python", check_dependencies),
        ("API –º–æ–¥—É–ª—å", test_api)
    ]
    
    all_passed = True
    for name, check_func in checks:
        print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞: {name}")
        if not check_func():
            all_passed = False
        print()
    
    if all_passed:
        print("üéâ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é!")
        print("\nüìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è timeweb.cloud:")
        print("–û–∫—Ä—É–∂–µ–Ω–∏–µ: Python")
        print("–§—Ä–µ–π–º–≤–æ—Ä–∫: FastAPI") 
        print("–ö–æ–º–∞–Ω–¥–∞ —Å–±–æ—Ä–∫–∏: pip install -r requirements.txt")
        print("–ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞: python main.py api")
    else:
        print("‚ùå –ü—Ä–æ–µ–∫—Ç –Ω–µ –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")
        sys.exit(1)

if __name__ == "__main__":
    main()